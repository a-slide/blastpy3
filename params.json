{"name":"Pyblast","tagline":"Simple and lightweight Python 2.7 wrapper module for NCBI BLAST+","body":"ï»¿# pyBlast 0.1\r\n\r\n**Simple and lightweight Python 2.7 wrapper module for NCBI BLAST+**\r\n\r\n**Creation : 2015/05/18**\r\n\r\n**Last update : 2015/05/22**\r\n\r\n## BlastHit\r\n\r\nPython object representing a hit found by blastn. The object contains the following public fields:\r\n\r\n* id: Auto incremented unique identifier [INT]\r\n* q_id: Query sequence name [STR]\r\n* s_id: Subject sequence name [STR]\r\n* identity: % of identity in the hit [FLOAT 0:100]\r\n* length: length of the hit [INT >=0]\r\n* mis: Number of mismatch in the hit [INT >=0]\r\n* gap: Number of gap in the hit [INT >=0]\r\n* q_start: Hit start position of the query sequence [INT >=0]\r\n* q_end: Hit end position of the query sequence [INT >=0]\r\n* s_start: Hit start position of the subject sequence [INT >=0]\r\n* s_end: Hit end position of the subject sequence [INT >=0]\r\n* evalue: E value of the alignment [FLOAT >=0]\r\n* bscore: Bit score of the alignment[FLOAT >=0]\r\n* q_seq: Sequence of the query aligned on the subject sequence [STR]\r\n* q_orient: Orientation of the query sequence [+ or -]\r\n* s_orient: Orientation of the subject sequence [+ or -]\r\n\r\nThe validity of numeric value is checked upon instantiation. Invalid values will raise assertion errors.\r\n\r\n## Blastn\r\n\r\nThis class contain the wrapper for Blastn and require the installation of ncbi Blast+ 2.2.28+.\r\n\r\n### Setup Blastn object: Create subject database\r\n\r\nUpon instantiation, a database is created from the user-provided subject sequence. Database files are created in a temporary directory.\r\nThe following parameters can be customized at Blastn objects instantiation\r\n* ref_path: Path to the reference fasta file (not gzipped). Mandatory\r\n* makeblastdb_exec: Path of the makeblastdb executable. Default = \"makeblastdb\"\r\n* makeblastdb_opt: makeblastdb command line options as a string. Default = \"\"\r\n* dbtype: Molecule type of target db ('nucl', 'prot'). Default = \"nucl\"\r\n* input_type: type of the data specified in input_file ('asn1_bin', 'asn1_txt', 'blastdb', 'fasta'). Default = \"fasta\"\r\n\r\nTo ensure a proper database files deletion at the end of the execution it is possible to call the object using the `with` statement.\r\nAlternatively you can call the `rm_db` method at the end of the Blastn usage.\r\n\r\n**Code**\r\n```\r\nwith Blastn(ref_path=\"./subject.fa\") as blastn:\r\n    print (blastn)\r\n```\r\n**Output**\r\n```\r\nCREATE DATABASE: makeblastdb  -dbtype nucl -input_type fasta -in subject.fa -out /tmp/tmpihszgZ/subject\r\n\r\nMAKEBLASTDB CLASS\tParameters list\r\n\tdb_basename\tsubject\r\n\tdb_dir\t/tmp/tmpihszgZ\r\n\tdb_path\t/tmp/tmpihszgZ/subject\r\n\tdbtype\tnucl\r\n\tinput_type\tfasta\r\n\tmakeblastdb_exec\tmakeblastdb\r\n\tmakeblastdb_opt\t\r\n\tref_path\tsubject.fa\r\n\r\nCleaning up blast DB files for \"subject\"\r\n```\r\n\r\n### Calling Blastn object: Perform Blastn and return a list of hits\r\n\r\nThe Blastn object can then be directly called, as many time as desired, with query fasta files, that can contain several sequences.\r\nThe method will automatically call blastn in a multiprocessing fashion, using as many threads as possible.\r\nThe following parameters can be customized at Blastn objects calling:\r\n\r\n* query_path: Path to a fasta file containing the query sequences (not gzipped). Mandatory\r\n* blast_exec: Path of the blast executable. By Default blastn will be used. Default = \"blastn\"\r\n* blastn_opt: Blastn command line options as a string. Default = \"\"\r\n* task: Type of blast to be performed ('blastn' 'blastn-short' 'dc-megablast' 'megablast' 'rmblastn'). Default = \"dc-megablast\"\r\n* evalue: E Value cuttoff to retain alignments. Default = 1\r\n* best_query_hit: find and return only the best hit per query. Default = False\r\n\r\nA list containing 1 BlastHit object for each query hit found in the subject will be returned, except if not hit were found in which situation 'None' will be returned. \r\nIf the best_query_hit flag was set to True, Only the best hit per query sequence from the query file will be returned.\r\n\r\n**Code**\r\n```\r\nwith Blastn(ref_path=\"./subject.fa\") as blastn:\r\n    hit_list = blastn(query_path=\"./query.fa\")\r\n    for hit in hit_list:\r\n        print (hit)\r\n```\r\n**Output**\r\n```\r\nCREATE DATABASE: makeblastdb  -dbtype nucl -input_type fasta -in ./subject.fa -out /tmp/tmp1ZBlfT/subject\r\n\r\nMAKE BLAST: blastn  -num_threads 4 -task dc-megablast -evalue 1 -outfmt \"6 std qseq\" -dust no -query ./query.fa -db /tmp/tmp1ZBlfT/subject\r\n\r\n\t2 hits found\r\nHIT 0\tQuery\tquery1:0-48(+)\r\n\tSubject\tsubject:19-67(+)\r\n\tLenght : 48\tIdentity : 100.0%\tEvalue : 2e-23\tBit score : 87.8\r\n\tAligned query seq : GCATGCTCGATCAGTAGCTCTCAGTACGCATACGCTAGCATCACGACT\r\n\r\nHIT 1\tQuery\tquery2:0-48(+)\r\n\tSubject\tsubject:89-137(+)\r\n\tLenght : 48\tIdentity : 100.0%\tEvalue : 2e-23\tBit score : 87.8\r\n\tAligned query seq : CGCATCGACTCGATCTGATCAGCTCACAGTCAGCATCAGCTACGATCA\r\n\r\nCleaning up blast DB files for \"subject\"\r\n```\r\n\r\n\r\n## Testing pyBlast module\r\n\r\nThe module can be easily tested thanks to pytest\r\n\r\n* Install pytest with pip `pip instal pytest`\r\n* Run test with py.test-2.7  -v\r\n\r\nExample of output if successful. Please note than some tests might fail due to the random sampling of DNA sequences, and uncertainties of Blastn algorithm.\r\n```\r\n========================================== test session starts ===========================================\r\nplatform linux2 -- Python 2.7.5 -- py-1.4.27 -- pytest-2.7.0 -- /usr/bin/python\r\nrootdir: /home/adrien/Programming/Python/pyBlast, inifile: \r\ncollected 21 items \r\n\r\ntest_pyBlast.py::test_BlastHit[4.16866907958-57-98-69-88-12-100-43-1.40452897105-47.3666242716] PASSED\r\ntest_pyBlast.py::test_BlastHit[-1-7-10-20-73-54-25-45-98.7921480151-45.2397166228] xfail\r\ntest_pyBlast.py::test_BlastHit[8.92741377413--1-100-36-34-33-14-71-18.8547135761-97.6604693294] xfail\r\ntest_pyBlast.py::test_BlastHit[10.5987790458-46--1-45-78-81-86-86-73.8740266727-56.887410005] xfail\r\ntest_pyBlast.py::test_BlastHit[66.8213911219-62-48--1-91-10-60-20-88.7850139735-81.7901609219] xfail\r\ntest_pyBlast.py::test_BlastHit[86.6626174287-29-83-34--1-53-57-68-17.9799756069-7.83036609495] xfail\r\ntest_pyBlast.py::test_BlastHit[5.23985331666-43-85-33-7--1-14-3-74.2130782704-88.9289495285] xfail\r\ntest_pyBlast.py::test_BlastHit[75.6935977321-8-78-68-10-39--1-74-44.1447867052-22.5203082483] xfail\r\ntest_pyBlast.py::test_BlastHit[39.8692596061-60-5-49-77-9-31--1-2.59963139531-46.3133849683] xfail\r\ntest_pyBlast.py::test_BlastHit[15.7192632366-24-92-1-64-82-83-90--1-75.5540618409] xfail\r\ntest_pyBlast.py::test_BlastHit[18.6627439886-34-57-60-5-45-26-40-77.7840842678--1] xfail\r\ntest_pyBlast.py::test_Blastn[blastn-Queries from Subject] PASSED\r\ntest_pyBlast.py::test_Blastn[blastn-Random queries] xfail\r\ntest_pyBlast.py::test_Blastn[blastn-short-Queries from Subject] PASSED\r\ntest_pyBlast.py::test_Blastn[blastn-short-Random queries] xfail\r\ntest_pyBlast.py::test_Blastn[dc-megablast-Queries from Subject] PASSED\r\ntest_pyBlast.py::test_Blastn[dc-megablast-Random queries] xfail\r\ntest_pyBlast.py::test_Blastn[megablast-Queries from Subject] PASSED\r\ntest_pyBlast.py::test_Blastn[megablast-Random queries] xfail\r\ntest_pyBlast.py::test_Blastn[rmblastn-Queries from Subject] PASSED\r\ntest_pyBlast.py::test_Blastn[rmblastn-Random queries] xfail\r\n\r\n================================== 6 passed, 15 xfailed in 5.91 seconds ==================================\r\n```\r\n\r\n## Dependencies\r\n\r\n* [ncbi Blast+ 2.2.28+](http://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download)\r\n* [python package pytest](http://pytest.org/latest/): `pip instal pytest`\r\n\r\n## Authors and Contact\r\n\r\nAdrien Leger - 2015\r\n\r\n* <adrien.leger@gmail.com> - <adrien.leger@inserm.fr> - <adrien.leger@univ-nantes.fr>\r\n* [Github](https://github.com/a-slide)\r\n* [Atlantic Gene Therapies - INSERM 1089](http://www.atlantic-gene-therapies.fr/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}